{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "name": {
      "type": "string",
      "minLength": 3,
      "maxLength": 50,
      "metadata": {
        "description": "The name of the Function App."
      }
    },
    "runtime": {
      "type": "string",
      "defaultValue": "dotnet",
      "allowedValues": [
        "dotnet",
        "node",
        "java",
        "powershell",
        "python"
      ],
      "metadata": {
        "description": "The runtime for the Function App."
      }
    },
    "isConsumption": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Whether to use Consumption plan for the Function App."
      }
    },
    "isAlwaysOn": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Whether the Function App is always on."
      }
    },
    "useExistingHostingPlan":{
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Whether to use an existing service plan."
      }
    },
    "hostingPlanName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 50,
      "defaultValue": "[parameters('name')]",
      "metadata": {
        "description": "The name of the Hosting Plan."
      }
    },
    "hostingPlanSku": {
      "type": "string",
      "defaultValue": "S1",
      "metadata": {
        "description": "The SKU of the Hosting Plan."
      }
    },
    "hostingPlanSkuTier": {
      "type": "string",
      "defaultValue": "Standard",
      "metadata": {
        "description": "The SKU Tier of the Hosting Plan."
      }
    },
    "hostingPlanWorkerSize": {
      "type": "string",
      "allowedValues": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5"
      ],
      "defaultValue": "0",
      "metadata": {
        "description": "The instance size of the Hosting Plan (for App Service: 0 = small, 1 = medium, 2 = large; for Premium: 3 = small, 4 = medium, 5 = large)."
      }
    },
    "hostingPlanWorkerCount": {
      "type": "string",
      "defaultValue": "1",
      "metadata": {
        "description": "The number of workers for the Hosting Plan."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for the resources."
      }
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]",
      "metadata": {
        "description": "The tenant identifier of the subscription."
      }
    },
    "timezone": {
      "type": "string",
      "defaultValue": "W. Europe Standard Time",
      "metadata": {
        "description": "The timezone to use for the Function App."
      }
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The name of the keyvault the Function App should connect to, leave empty if none."
      }
    },
    "useManagedIdentity": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Whether to use Managed Identity for the Function App."
      }
    },
    "storageAccountName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 50,
      "defaultValue": "[parameters('name')]",
      "metadata": {
        "description": "The name of the Storage Account."
      }
    },
    "appInsightsName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 50,
      "defaultValue": "[parameters('name')]",
      "metadata": {
        "description": "The name of the Application Insights."
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS"
      ],
      "metadata": {
        "description": "The Storage Account type"
      }
    },
    "encryptStorage": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Whether to encrypt data in the Storage Account."
      }
    },
    "additionalAppSettings": {
      "type": "object",
      "defaultValue": [],
      "metadata": {
        "description": "Additional application settings to add to this App Service."
      }
    },
    "functionVersion": {
      "type": "string",
      "minLength": 1,
      "maxLength": 10,
      "defaultValue": "~2",
      "metadata": {
        "description": "Function version for the function app (defaults to v2)."
      }
    }
  },
  "variables": {
    "templateBaseUrl": "https://raw.githubusercontent.com/Winvision/azure-arm-templates/master/",
    "managedIdentity": "[concat(resourceId('Microsoft.Web/sites', parameters('name')), '/providers/Microsoft.ManagedIdentity/Identities/default')]",
    "consumptionHostingPlanName": "[concat(parameters('hostingPlanName'), '-cs')]",
    "appServiceHostingPlanName": "[concat(parameters('hostingPlanName'), '-as')]",
    "actualHostingPlanName": "[
      if(parameters('useExistingHostingPlan'), 
        parameters('hostingPlanName'), 
        if(parameters('isConsumption'), 
          variables('consumptionHostingPlanName'), 
          variables('appServiceHostingPlanName')))]",
    "origStorageAccountName": "[replace(parameters('storageAccountName'), '-', '')]",
    "genStorageAccountName": "[concat(take(variables('origStorageAccountName'), 11), uniqueString(resourceGroup().id, variables('origStorageAccountName')))]",
    "storageAccountName": "[if(greater(length(variables('origStorageAccountName')), 24), variables('genStorageAccountName'), variables('origStorageAccountName'))]",
    "appInsightsName": "[parameters('appInsightsName')]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-02-01",
      "name": "[parameters('name')]",
      "kind": "functionapp",
      "location": "[parameters('location')]",
      "identity": {
        "type": "[if(parameters('useManagedIdentity'), 'SystemAssigned', 'None')]"
      },
      "properties": {
        "name": "[parameters('name')]",
        "siteConfig": {
          "alwaysOn": "[parameters('isAlwaysOn')]"
        },
        "serverFarmId": "[resourceId(resourceGroup().name, 'Microsoft.Web/serverfarms', variables('actualHostingPlanName'))]",
        "clientAffinityEnabled": false
      },
      "dependsOn": [
        "storage",
        "[variables('consumptionHostingPlanName')]",
        "[variables('appServiceHostingPlanName')]",
        "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "name": "appsettings",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(variables('templateBaseUrl'), 'appservice-appsettings.json')]"
        },
        "parameters": {
          "appserviceName": {
            "value": "[parameters('name')]"
          },
          "appSettings": {
            "value": {
              "FUNCTIONS_WORKER_RUNTIME": "[parameters('runtime')]",
              "FUNCTIONS_EXTENSION_VERSION": "[parameters('functionVersion')]",
              "WEBSITE_TIME_ZONE": "[parameters('timezone')]",
              "KeyVaultName": "[parameters('keyVaultName')]",
              "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', reference('storage').outputs.accessKey.value)]",
              "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', reference('storage').outputs.accessKey.value)]",
              "WEBSITE_CONTENTSHARE": "[parameters('name')]",
              "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName'))).InstrumentationKey]",
              "AzureWebJobsFeatureFlags": "EnableActionResultHandling"
            }
          },
          "additionalAppSettings": {
            "value": "[parameters('additionalAppSettings')]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('name'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "name": "storage",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(variables('templateBaseUrl'), 'storage.json')]"
        },
        "parameters": {
          "name": {
            "value": "[variables('storageAccountName')]"
          },
          "storageAccountType": {
            "value": "[parameters('storageAccountType')]"
          },
          "encryptStorage": {
            "value": "[parameters('encryptStorage')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2015-05-01",
      "name": "[variables('appInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "ApplicationId": "[parameters('name')]"
      }
    },
    {
      "condition": "[and(parameters('isConsumption'), not(parameters('useExistingHostingPlan')))]",
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[variables('consumptionHostingPlanName')]",
      "location": "[parameters('location')]",
      "properties": {
        "name": "[variables('consumptionHostingPlanName')]",
        "computeMode": "Dynamic"
      },
      "sku": {
        "Tier": "Dynamic",
        "Name": "Y1"
      }
    },
    {
      "condition": "[and(not(parameters('isConsumption')), not(parameters('useExistingHostingPlan')))]",
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[variables('appServiceHostingPlanName')]",
      "location": "[parameters('location')]",
      "properties": {
        "name": "[variables('appServiceHostingPlanName')]",
        "workerSize": "[parameters('hostingPlanWorkerSize')]",
        "workerSizeId": "[parameters('hostingPlanWorkerSize')]",
        "numberOfWorkers": "[parameters('hostingPlanWorkerCount')]"
      },
      "sku": {
        "Tier": "[parameters('hostingPlanSkuTier')]",
        "Name": "[parameters('hostingPlanSku')]"
      }
    },
    {
      "condition": "[not(empty(parameters('keyVaultName')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "name": "accesspolicies",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(variables('templateBaseUrl'), 'keyvault-accesspolicies.json')]"
        },
        "parameters": {
          "keyVaultName": {
            "value": "[parameters('keyVaultName')]"
          },
          "tenantId": {
            "value": "[parameters('tenantId')]"
          },
          "objectIds": {
            "value": [
              "[reference(variables('managedIdentity'), '2018-11-30').principalId]"
            ]
          },
          "permissions": {
            "value": {
              "secrets": [
                "get",
                "list"
              ]
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('name'))]"
      ]
    }
  ],
  "outputs": {
    "name": {
      "type": "string",
      "value": "[parameters('name')]"
    },
    "resourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Web/sites', parameters('name'))]"
    },
    "msiPrincipalId": {
      "condition": "[parameters('useManagedIdentity')]",
      "type": "string",
      "value": "[reference(variables('managedIdentity'), '2018-11-30').principalId]",
      "metadata": {
        "comments": "Returns the Principal Identifier of the Managed Identity created for the Function App."
      }
    }
  }
}